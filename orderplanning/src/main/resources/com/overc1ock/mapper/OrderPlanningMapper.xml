<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.overc1ock.mapper.OrderPlanningMapper">
	
	<!-- 품목 정보 목록 출력 -->
	<select id="getItemInfo" resultType="com.overc1ock.domain.ItemInfoVO">
		SELECT item_code, item_name, standard, material, specification_file, draw_file, item_registration_date, sc_code
		FROM item LEFT JOIN sub_category USING(sc_code) LEFT JOIN major_category USING(mc_code) 
		ORDER BY item_registration_date DESC
	</select>
	
	<!-- 품목 정보 저장 -->
	<insert id="saveItemInfo">
		INSERT INTO `mesdb`.`item` (`item_name`, `standard`, `material`, `specification_file`, `draw_file`, `sc_code`) 
		VALUES (#{ item_name }, #{ standard }, #{ material }, #{ specification_file }, #{ draw_file }, #{ sc_code });
	</insert>
	
	<!-- 중분류 코드 가져오기 -->
	<select id="getSubCategory" resultType="com.overc1ock.domain.ItemInfoVO">
		SELECT *
		FROM sub_category
		ORDER BY sc_code
	</select>
	
	<!-- 품목 정보 조회 -->
	<select id="inquiryItemInfo" resultType="com.overc1ock.domain.ItemInfoVO">
		SELECT `item_code`, `item_name`, `standard`, `material`, `specification_file`, `draw_file`, `item_registration_date`, `sc_code` 
		FROM `mesdb`.`item` WHERE  `item_code`=#{ item_code }
	</select>
	
	<!-- 품목 정보 삭제 -->
	<delete id="deleteItemInfo">
		DELETE FROM `mesdb`.`item` WHERE  `item_code`=#{ item_code }
	</delete>
	
	<!-- 품목 정보 수정 -->
	<update id="modifyItemInfo">
		UPDATE `mesdb`.`item` 
		SET `item_name`=#{ item_name }, `standard`=#{ standard }, `material`=#{ material }, 
		`specification_file`=#{ specification_file }, `draw_file`=#{ draw_file }, `sc_code`=#{ sc_code } WHERE  `item_code`=#{ item_code };
	</update>
	
	<!-- 계약 품목 정보 목록 출력 -->
	<select id="getContract" resultType="com.overc1ock.domain.ContractVO">
		SELECT contract_name, product_name, item_code, item_name, subcontractor_name, agreement_date, leadtime
		FROM contract LEFT JOIN item USING(item_code) LEFT JOIN item_has_product USING(item_code) 
		ORDER BY contract_date DESC
	</select>
	
	<!-- 협력 업체 정보 가져오기 -->
	<select id="getSubcontractor" resultType="com.overc1ock.domain.ContractVO">
		SELECT *
		FROM subcontractor
		ORDER BY subcontractor_date
	</select>
	
	<!-- 품목 정보 목록 가져오기 -->
	<select id="getItemInfoForContract" resultType="com.overc1ock.domain.ContractVO">
		SELECT *
		FROM item_has_product LEFT JOIN item USING(item_code)
		ORDER BY item_code
	</select>
	
	<!-- 조달 예정 목록 출력 -->
	<select id="getProcurementPlan" resultType="com.overc1ock.domain.ProcurementPlanVO">
		SELECT item_code, item_name, process, production_date, consumption
		FROM item_has_product LEFT JOIN item USING(item_code) 
		LEFT JOIN products_production_plan USING(product_name) 
		LEFT JOIN item_use_plan USING(item_code) ORDER BY item_registration_date DESC
	</select>
	
	<!-- 품목 정보 목록 가져오기 -->
	<select id="getItemInfoForProcurementPlan" resultType="com.overc1ock.domain.ProcurementPlanVO">
		SELECT *
		FROM item_has_product LEFT JOIN item USING(item_code)
		ORDER BY item_code
	</select>
	
</mapper>